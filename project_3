### project3-GroupL.py
# MIT License
# 
# Copyright (c) 2022 Andrei Ivlev, Animesh Gautam, Arundhati Pillay, Jiayi Yang, Tsaichi Lee
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


import pandas as pd
import numpy as np 

class Process:
    def __init__(self):
        
        df = pd.read_csv('statement-2022-06.csv')
        df.columns = ['Description', 'Date', 'Amount']
        previous_balance = df.loc[df['Description']=='Previous balance']['Date']
        outgoing_transactions = df.loc[df['Description']=='Outgoing transactions']['Date']
        incoming_transactions = df.loc[df['Description']=='Incoming transactions']['Date']
        new_balance = df.loc[df['Description']=='Your new balance']['Date']
        row = df[df['Description'] == 'Previous balance'].index.tolist()[0]

        df = df.iloc[:row]
        df = df[df['Description'].notna()]
        df = df.reset_index(drop=True)
        df = df.replace('Booking Date', np.nan)

        first_list = df.index[df['Date'].notna() == True].tolist()
        second_list = [x+1 for x in first_list]
        index_list = first_list + second_list
        index_list = sorted(index_list)
        df = df.iloc[index_list]
        df = df.reset_index(drop=True)

        df['Description'] = np.where((df['Date'].isna() == True) & (df['Description'].str.contains(" • ", case=False) == False),
                                     np.nan,
                                     df['Description'])
        df['Description'] = np.where(df['Description'].str.contains(" • ", case=False) == True,
                                     df['Description'].str.split(' • ').str[1],
                                     df['Description'])
        df['Description'] = df['Description'].fillna('Other')

        df['Category'] = np.where(df['Date'].isna() == False,
                                  df['Description'].shift(-1),
                                  np.nan)
        df = df[df['Category'].notna()]
        df = df.reset_index(drop=True)
